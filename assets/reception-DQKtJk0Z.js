const n={productData:null,promotionData:[],init:function(){const t=localStorage.getItem("promotionData");if(t)try{this.promotionData=JSON.parse(t)}catch(o){console.error("Error parsing promotion data from localStorage:",o),this.promotionData=[]}},storeProductData:function(t){this.productData=t,localStorage.setItem("productData",JSON.stringify(t))},getProductData:function(){if(this.productData)return this.productData;{const t=localStorage.getItem("productData");return t?(this.productData=JSON.parse(t),this.productData):null}},storePromotionData:function(t){const o=this.promotionData.findIndex(a=>a.image===t.image);o!==-1?this.promotionData[o].quantity+=parseInt(t.quantity)||1:(t.quantity=parseInt(t.quantity)||1,this.promotionData.push(t)),localStorage.setItem("promotionData",JSON.stringify(this.promotionData))},getPromotionData:function(){return this.promotionData},removePromotion:function(t){return this.promotionData=this.promotionData.filter(o=>o.image!==t),localStorage.setItem("promotionData",JSON.stringify(this.promotionData)),this.promotionData},updateQuantity:function(t,o){console.log(`Updating promotion quantity for image ${t} to ${o}`);try{const a=this.promotionData.findIndex(i=>i.image===t);if(a!==-1){console.log("Found existing item, updating quantity."),this.promotionData[a].quantity=Math.max(o,1);try{localStorage.setItem("promotionData",JSON.stringify(this.promotionData)),console.log("Successfully updated localStorage.")}catch(i){console.error("Error updating promotion data in localStorage:",i)}}else console.warn("No matching item found for image",t)}catch(a){console.error("An error occurred while updating promotion quantity:",a)}},aggregate:function(){const t=new Map;return this.promotionData.forEach(o=>{const a=o.image;if(t.has(a)){const i=t.get(a);i.quantity+=parseInt(o.quantity)||1}else o.quantity=parseInt(o.quantity)||1,t.set(a,{...o})}),Array.from(t.values())}};n.init();export{n as R};
